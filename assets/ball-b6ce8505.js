import{S as p,T as a,a as u,U as f,C as x,G as T,c as o}from"./index-a410ed50.js";class c extends p{constructor(t,e=!0){super(t[0]instanceof a?t[0]:t[0].texture),this._textures=null,this._durations=null,this._autoUpdate=e,this._isConnectedToTicker=!1,this.animationSpeed=1,this.loop=!0,this.updateAnchor=!1,this.onComplete=null,this.onFrameChange=null,this.onLoop=null,this._currentTime=0,this._playing=!1,this._previousFrame=null,this.textures=t}stop(){this._playing&&(this._playing=!1,this._autoUpdate&&this._isConnectedToTicker&&(u.shared.remove(this.update,this),this._isConnectedToTicker=!1))}play(){this._playing||(this._playing=!0,this._autoUpdate&&!this._isConnectedToTicker&&(u.shared.add(this.update,this,f.HIGH),this._isConnectedToTicker=!0))}gotoAndStop(t){this.stop(),this.currentFrame=t}gotoAndPlay(t){this.currentFrame=t,this.play()}update(t){if(!this._playing)return;const e=this.animationSpeed*t,i=this.currentFrame;if(this._durations!==null){let s=this._currentTime%1*this._durations[this.currentFrame];for(s+=e/60*1e3;s<0;)this._currentTime--,s+=this._durations[this.currentFrame];const r=Math.sign(this.animationSpeed*t);for(this._currentTime=Math.floor(this._currentTime);s>=this._durations[this.currentFrame];)s-=this._durations[this.currentFrame]*r,this._currentTime+=r;this._currentTime+=s/this._durations[this.currentFrame]}else this._currentTime+=e;this._currentTime<0&&!this.loop?(this.gotoAndStop(0),this.onComplete&&this.onComplete()):this._currentTime>=this._textures.length&&!this.loop?(this.gotoAndStop(this._textures.length-1),this.onComplete&&this.onComplete()):i!==this.currentFrame&&(this.loop&&this.onLoop&&(this.animationSpeed>0&&this.currentFrame<i||this.animationSpeed<0&&this.currentFrame>i)&&this.onLoop(),this.updateTexture())}updateTexture(){const t=this.currentFrame;this._previousFrame!==t&&(this._previousFrame=t,this._texture=this._textures[t],this._textureID=-1,this._textureTrimmedID=-1,this._cachedTint=16777215,this.uvs=this._texture._uvs.uvsFloat32,this.updateAnchor&&this._anchor.copyFrom(this._texture.defaultAnchor),this.onFrameChange&&this.onFrameChange(this.currentFrame))}destroy(t){this.stop(),super.destroy(t),this.onComplete=null,this.onFrameChange=null,this.onLoop=null}static fromFrames(t){const e=[];for(let i=0;i<t.length;++i)e.push(a.from(t[i]));return new c(e)}static fromImages(t){const e=[];for(let i=0;i<t.length;++i)e.push(a.from(t[i]));return new c(e)}get totalFrames(){return this._textures.length}get textures(){return this._textures}set textures(t){if(t[0]instanceof a)this._textures=t,this._durations=null;else{this._textures=[],this._durations=[];for(let e=0;e<t.length;e++)this._textures.push(t[e].texture),this._durations.push(t[e].time)}this._previousFrame=null,this.gotoAndStop(0),this.updateTexture()}get currentFrame(){let t=Math.floor(this._currentTime)%this._textures.length;return t<0&&(t+=this._textures.length),t}set currentFrame(t){if(t<0||t>this.totalFrames-1)throw new Error(`[AnimatedSprite]: Invalid frame index value ${t}, expected to be between 0 and totalFrames ${this.totalFrames}.`);const e=this.currentFrame;this._currentTime=t,e!==this.currentFrame&&this.updateTexture()}get playing(){return this._playing}get autoUpdate(){return this._autoUpdate}set autoUpdate(t){t!==this._autoUpdate&&(this._autoUpdate=t,!this._autoUpdate&&this._isConnectedToTicker?(u.shared.remove(this.update,this),this._isConnectedToTicker=!1):this._autoUpdate&&!this._isConnectedToTicker&&this._playing&&(u.shared.add(this.update,this),this._isConnectedToTicker=!0))}}class y extends x{constructor(t){super(),this.o=t;const e=20,i=3;this.r=e+i-2;const{showShape:s=!1,x:r=200,y:l=1100,speed:m=400,clr:h=16711731,loc:n=[]}=t||{};this.ball=new T,this.ball.beginFill(h),this.ball.lineStyle(i,0),this.ball.drawCircle(0,0,e),this.ball.endFill(),s&&this.addChild(this.ball),this.x=r,this.y=l,this.speed=m,this.loc=n,this.setXYmm(t),this.uid=(t==null?void 0:t.uid)||Date.now().toString(36),this.kill=(t==null?void 0:t.kill)||(()=>{})}animate(t){let{x:e,y:i}=this,[s,r]=this.loc,l=(s-e)*(s-e)+(r-i)*(r-i),m=Math.abs(Math.sqrt(l));const h=this.speed*t*.001;if(m<h){this.x=o(s,this.minX,this.maxX),this.y=o(r,this.minY,this.maxY),this.moving=!(parseInt(e)==parseInt(this.x)&&parseInt(i)==parseInt(this.y));return}let n=Math.atan((i-r)/(s-e)).toFixed(2);if(!n)return;let d=(s-e>0?1:-1)*Math.abs(h*Math.cos(n)||0),_=(r-i>0?1:-1)*Math.abs(h*Math.sin(n)||0);d&&_&&(this.x=o(this.x+d,this.minX,this.maxX),this.y=o(this.y+_,this.minY,this.maxY),this.moving=!(parseInt(e)==parseInt(this.x)&&parseInt(i)==parseInt(this.y)))}setXYmm(t){t||(t=this.o),this.maxX=(t==null?void 0:t.maxX)||app.view.width-this.r,this.minX=(t==null?void 0:t.minX)||this.r,this.maxY=(t==null?void 0:t.maxY)||app.view.height-this.r,this.minY=(t==null?void 0:t.minY)||this.r}}export{c as A,y as S};
